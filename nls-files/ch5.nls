globals [
  LJ-force-cutoff-values  ; since sizes can change, we store the cutoff adjustment values for different sizes of atom pairs
  LJ-pot-cutoff-values  ; since sizes can change, we store the cutoff adjustment values for different sizes of atom pairs
]

;;;;;;;;;;;;;;;;;;;;;;
;; Setup Procedures ;;
;;;;;;;;;;;;;;;;;;;;;;

to ch5.pin-bottom-row
  ask atoms with-min [ycor] [
      set pinned? true
      set shape "circle-X"
    ]
end


to ch5.setup-LJ
  set LJ-pot-cutoff-values n-values 41 [0]  ; initialize to zeros so zero as cutoff value will be used in the calculation on next line
  set LJ-force-cutoff-values n-values 41 [0] ; initialize to zeros so zero as cutoff value will be used in the calculation on next line

  set LJ-pot-cutoff-values map  [s -> first ch5.LJ-potential-and-force cutoff-dist s s] (range 0 2.05 .05)  ; calculate cutoff values to adjust LJ potential various sigma values
  set LJ-force-cutoff-values map  [s -> last ch5.LJ-potential-and-force cutoff-dist s s] (range 0 2.05 .05)  ; calculate cutoff values to adjust LJ for various sigma values
end


;;*******************************************************
;;**************** Go Procedures ************************
;;*******************************************************


;; *****************************************************
;; *********** Molecular Dynamics Procedures ***********
;; *****************************************************

to ch5.update-force-and-velocity
  ask atoms [    
    let sum-PE 0
    let n-fx 0
    let n-fy 0
    ask other atoms in-radius cutoff-dist [
      let r distance myself
      let indiv-pot-E-and-force (ch5.LJ-potential-and-force r sigma [sigma] of myself)
      let force last indiv-pot-E-and-force    
      face myself
      rt 180
      set n-fx n-fx + (force * dx)  ; assuming mass = 1. If not, neeed to divide force by mass to get acceleration
      set n-fy n-fy + (force * dy)
      set sum-PE sum-PE + first indiv-pot-E-and-force
    ]
    set atom-PE sum-PE / 2  ; divide by 2 to not double count pot-E for each atom
    
    ; updating velocity and force
    if not pinned? [
      set vx mdc.velocity-verlet-velocity vx (fx / mass) (n-fx / mass)
      set vy mdc.velocity-verlet-velocity vy (fy / mass) (n-fy / mass)
      set fx n-fx
      set fy n-fy
    ]
  ]
end


;; *****************************************************
;; ****** Lennard-Jones Potential/Force Procedures *****
;; *****************************************************

to-report ch5.LJ-potential-and-force [ r sigma1 sigma2] ; for the force, positive = attractive, negative = repulsive
  let sig (sigma1 + sigma2) / 2
  let third-power (sig / r) * (sig / r) * (sig / r)
  let sixth-power third-power * third-power
  let force (-6 * eps*4 * sixth-power / r) * (2 * sixth-power - 1) - ch5.LJ-force-cutoff sig
  let potential (eps*4 * (sixth-power * sixth-power - sixth-power)) - ch5.LJ-pot-cutoff sig
  report list potential force
end


to-report ch5.calc-PE
  let U 0  ;; U stands for PE

  ask other atoms in-radius cutoff-dist [
    set U U + ch5.calc-pair-PE-with myself
  ]
  report U
end

to-report ch5.calc-pair-PE-with [other-atom]
  let PE-and-force ch5.LJ-potential-and-force (distance other-atom) sigma  [sigma] of other-atom
  report first PE-and-force
end


to-report ch5.LJ-force-cutoff [sig]
  report item round (sig / .05) LJ-force-cutoff-values
end

to-report ch5.LJ-pot-cutoff [sig]
  report item round (sig / .05) LJ-pot-cutoff-values
end


;; *****************************************************
;; ********* Atom and Link Display procedures **********
;; *****************************************************

